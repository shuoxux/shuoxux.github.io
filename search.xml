<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>How To Use Git</title>
    <url>/2020/09/30/HowToUseGit/</url>
    <content><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p>
<h2 id="main-porcelain-commands">Main porcelain commands</h2>
<blockquote>
<p>git-add[1] Add file contents to the index</p>
</blockquote>
<blockquote>
<p>git-am[1] Apply a series of patches from a mailbox</p>
</blockquote>
<blockquote>
<p>git-archive[1] Create an archive of files from a named tree</p>
</blockquote>
<blockquote>
<p>git-bisect[1] Use binary search to find the commit that introduced a bug</p>
</blockquote>
<blockquote>
<p>git-branch[1] List, create, or delete branches</p>
</blockquote>
<blockquote>
<p>git-bundle[1] Move objects and refs by archive</p>
</blockquote>
<blockquote>
<p>git-checkout[1] Switch branches or restore working tree files</p>
</blockquote>
<blockquote>
<p>git-cherry-pick[1] Apply the changes introduced by some existing commits</p>
</blockquote>
<blockquote>
<p>git-citool[1] Graphical alternative to git-commit</p>
</blockquote>
<blockquote>
<p>git-clean[1] Remove untracked files from the working tree</p>
</blockquote>
<blockquote>
<p>git-clone[1] Clone a repository into a new directory</p>
</blockquote>
<blockquote>
<p>git-commit[1] Record changes to the repository</p>
</blockquote>
<blockquote>
<p>git-describe[1] Give an object a human readable name based on an available ref</p>
</blockquote>
<blockquote>
<p>git-diff[1] Show changes between commits, commit and working tree, etc</p>
</blockquote>
<blockquote>
<p>git-fetch[1] Download objects and refs from another repository</p>
</blockquote>
<blockquote>
<p>git-format-patch[1] Prepare patches for e-mail submission</p>
</blockquote>
<blockquote>
<p>git-gc[1] Cleanup unnecessary files and optimize the local repository</p>
</blockquote>
<blockquote>
<p>git-grep[1] Print lines matching a pattern</p>
</blockquote>
<blockquote>
<p>git-gui[1] A portable graphical interface to Git</p>
</blockquote>
<blockquote>
<p>git-init[1] Create an empty Git repository or reinitialize an existing one</p>
</blockquote>
<blockquote>
<p>gitk[1] The Git repository browser</p>
</blockquote>
<blockquote>
<p>git-log[1] Show commit logs</p>
</blockquote>
<blockquote>
<p>git-merge[1] Join two or more development histories together</p>
</blockquote>
<blockquote>
<p>git-mv[1] Move or rename a file, a directory, or a symlink</p>
</blockquote>
<blockquote>
<p>git-notes[1] Add or inspect object notes</p>
</blockquote>
<blockquote>
<p>git-pull[1] Fetch from and integrate with another repository or a local branch</p>
</blockquote>
<blockquote>
<p>git-push[1] Update remote refs along with associated objects</p>
</blockquote>
<blockquote>
<p>git-range-diff[1] Compare two commit ranges (e.g. two versions of a branch)</p>
</blockquote>
<blockquote>
<p>git-rebase[1] Reapply commits on top of another base tip</p>
</blockquote>
<blockquote>
<p>git-reset[1] Reset current HEAD to the specified state</p>
</blockquote>
<blockquote>
<p>git-restore[1] Restore working tree files</p>
</blockquote>
<blockquote>
<p>git-revert[1] Revert some existing commits</p>
</blockquote>
<blockquote>
<p>git-rm[1] Remove files from the working tree and from the index</p>
</blockquote>
<blockquote>
<p>git-shortlog[1] Summarize git log output</p>
</blockquote>
<blockquote>
<p>git-show[1] Show various types of objects</p>
</blockquote>
<blockquote>
<p>git-sparse-checkout[1] Initialize and modify the sparse-checkout</p>
</blockquote>
<blockquote>
<p>git-stash[1] Stash the changes in a dirty working directory away</p>
</blockquote>
<blockquote>
<p>git-status[1] Show the working tree status</p>
</blockquote>
<blockquote>
<p>git-submodule[1] Initialize, update or inspect submodules</p>
</blockquote>
<blockquote>
<p>git-switch[1] Switch branches</p>
</blockquote>
<blockquote>
<p>git-tag[1] Create, list, delete or verify a tag object signed with GPG</p>
</blockquote>
<blockquote>
<p>git-worktree[1] Manage multiple working trees</p>
</blockquote>
<blockquote>
<p>Ancillary Commands Manipulators:</p>
</blockquote>
<blockquote>
<p>git-config[1] Get and set repository or global options</p>
</blockquote>
<blockquote>
<p>git-fast-export[1] Git data exporter</p>
</blockquote>
<blockquote>
<p>git-fast-import[1] Backend for fast Git data importers</p>
</blockquote>
<blockquote>
<p>git-filter-branch[1] Rewrite branches</p>
</blockquote>
<blockquote>
<p>git-mergetool[1] Run merge conflict resolution tools to resolve merge conflicts</p>
</blockquote>
<blockquote>
<p>git-pack-refs[1] Pack heads and tags for efficient repository access</p>
</blockquote>
<blockquote>
<p>git-prune[1] Prune all unreachable objects from the object database</p>
</blockquote>
<blockquote>
<p>git-reflog[1] Manage reflog information</p>
</blockquote>
<blockquote>
<p>git-remote[1] Manage set of tracked repositories</p>
</blockquote>
<blockquote>
<p>git-repack[1] Pack unpacked objects in a repository</p>
</blockquote>
<blockquote>
<p>git-replace[1] Create, list, delete refs to replace objects</p>
</blockquote>
<blockquote>
<p>Interrogators:</p>
</blockquote>
<blockquote>
<p>git-annotate[1] Annotate file lines with commit information</p>
</blockquote>
<blockquote>
<p>git-blame[1] Show what revision and author last modified each line of a file</p>
</blockquote>
<blockquote>
<p>git-bugreport[1] Collect information for user to file a bug report</p>
</blockquote>
<blockquote>
<p>git-count-objects[1] Count unpacked number of objects and their disk consumption</p>
</blockquote>
<blockquote>
<p>git-difftool[1] Show changes using common diff tools</p>
</blockquote>
<blockquote>
<p>git-fsck[1] Verifies the connectivity and validity of the objects in the database</p>
</blockquote>
<blockquote>
<p>git-help[1] Display help information about Git</p>
</blockquote>
<blockquote>
<p>git-instaweb[1] Instantly browse your working repository in gitweb</p>
</blockquote>
<blockquote>
<p>git-merge-tree[1] Show three-way merge without touching index</p>
</blockquote>
<blockquote>
<p>git-rerere[1] Reuse recorded resolution of conflicted merges</p>
</blockquote>
<blockquote>
<p>git-show-branch[1] Show branches and their commits</p>
</blockquote>
<blockquote>
<p>git-verify-commit[1] Check the GPG signature of commits</p>
</blockquote>
<blockquote>
<p>git-verify-tag[1] Check the GPG signature of tags</p>
</blockquote>
<blockquote>
<p>gitweb[1] Git web interface (web frontend to Git repositories)</p>
</blockquote>
<blockquote>
<p>git-whatchanged[1] Show logs with difference each commit introduces</p>
</blockquote>
<h2 id="references">References</h2>
<p><a href="https://git-scm.com/">git-sem.com</a> <a href="https://git-scm.com/docs/git#_git_commands">GitDoc</a></p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习 第八章 集成学习(Ensemble Learning)</title>
    <url>/2020/10/04/EnsembleLearning/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>    本篇是周志华西瓜书机器学习笔记，第八章集成学习。</p>
<h2 id="个体与集成">个体与集成</h2>
<p>    集成学习通过构建并结合多个学习器来完成学习任务。</p>
<p>    集成学习的一般结构是：先产生一组“个体学习器”(individual leaner)，再采用某种策略将他们结合起来。</p>
<p>    集成学习通过将多个学习器进行结合，常可获得比单一学习器显著优越的学习性能，这对“弱学习器(weak leaner)”尤为明显。</p>
<p>    根据个体学习器的生成方式，目前的集成学习方法大致可分为两类：个体学习器存在强依赖关系、必须串行生成的序列化方法(代表是Boosting);个体学习器间不存在强依赖关系、可同时生成的并行化方法(代表是Bagging和“随机森林”(Random Forest))</p>
<h2 id="boosting">Boosting</h2>
<p>    Boosting是一族可将弱学习器提升为强学习器的算法。算法机制：先从初始训练集训练出一个基学习器，再根据基学习器的表现对训练样本分布进行调整，使得先前样本在后续受到更多关注，然后基于调整后的样本分布来训练下一个基学习器；如此重复进行，直至基学习器数目达到事先制定的值T，最终将这T个额基学习器进行加权结合。</p>
<p>    标准AdaBoost算法适用于二分类任务，有多种推导方式，容易理解的是基于“加性模型”来最小化指数损失函数。</p>
<blockquote>
<hr />
<p>输入：训练集<span class="math inline">\(D=\left\{(\boldsymbol{x}_1,y_1),(\boldsymbol x_2,y_2),...,(\boldsymbol x_m,y_m)\right\}\)</span>       基学习算法<span class="math inline">\(\mathfrak{L}\)</span></p>
<p>      训练轮数<span class="math inline">\(T\)</span>.</p>
<p>过程:</p>
<p>1: <span class="math inline">\(\mathcal{D}=1/m\)</span>.</p>
<p>2: <span class="math inline">\(\boldsymbol{for}\)</span> <span class="math inline">\(t = 1,2,...,T\)</span>$ $</p>
<p>3:  <span class="math inline">\(h_t=\mathfrak{L}(D,\mathcal{D}_t);\)</span></p>
<p>4:  <span class="math inline">\(\epsilon=P_{\boldsymbol{x}\sim\mathcal{D}}(h_t(\boldsymbol{x})\not ={f(\boldsymbol{x})})\)</span>;</p>
<p>5:  <span class="math inline">\(\boldsymbol{if}\ \epsilon_t&gt;0.5\ \boldsymbol{then\ break}\)</span></p>
<p>6:  <span class="math inline">\(\alpha_t=\frac{1}{2}ln(\frac{1-\epsilon_t}{\epsilon_t})\)</span>;</p>
<p>7:  <span class="math inline">\(\mathcal{D}_{t+1}(\boldsymbol{x})=\frac{\mathcal{D}_t(\boldsymbol{x})}{Z_t}\times \begin{cases} exp(-\alpha_t) &amp; \quad \text{if } h_t(\boldsymbol{x})=f(\boldsymbol{x}) \\ exp(\alpha_t) &amp; \quad \text{if } h_t(\boldsymbol{x})\not=f(\boldsymbol{x}) \end{cases} =\frac{\mathcal{D}_t(\boldsymbol{x})exp(-\alpha_tf(\boldsymbol{x})h_t(\boldsymbol{x}))}{Z_t}\)</span></p>
<p>8: <span class="math inline">\(\boldsymbol{end\ for}\)</span></p>
<p>输出：<span class="math inline">\(H(\boldsymbol{x})=sign\big(\sum^T_{t=1}\alpha_th_t(\boldsymbol{x})\big)\)</span></p>
<hr />
</blockquote>
<p><span class="math display">\[Adaoost算法\]</span></p>
<h2 id="bagging与随机森林">Bagging与随机森林</h2>
<p> Bagging是并行式集成学习最著名的代表，它直接基于自主采样法(boostrap sampling)</p>
<blockquote>
<hr />
<p>输入：训练集<span class="math inline">\(D=\left\{(\boldsymbol x_1,y_1),(\boldsymbol x_2,y_2),...,(\boldsymbol x_m,y_m)\right\}\)</span></p>
<p>      基学习算法<span class="math inline">\(\mathfrak{L}\)</span></p>
<p>      训练轮数<span class="math inline">\(T\)</span>.</p>
<p>过程:</p>
<p>1: <span class="math inline">\(\boldsymbol{for}\ t=1,2,...,T\ \boldsymbol{do}\)</span></p>
<p>2:   <span class="math inline">\(h_t=\mathfrak{L}(D,\mathcal{D}_{bs})\)</span></p>
<p>3: <span class="math inline">\(\boldsymbol{end\ for}\)</span></p>
<p>输出：<span class="math inline">\(H(\boldsymbol{x})=\underset{y\in\mathcal{Y}}{arg\ max}\sum^T_{t=1}\mathbb{I}(h_t(\boldsymbol{x})=y)\)</span></p>
<hr />
</blockquote>
<p><span class="math display">\[Bagging算法\]</span></p>
<p>Bagging能不经修改地用于多分类、回归任务。</p>
<p>随机森林(Random Forest，简称RF)是Bagging的一个扩展变体。RF在以决策树为基学习器构建Bagging集成的基础上，进一步在决策树的训练过程中引入了随机属性的选择。</p>
<p>随机森林的训练效率通常优于Bagging，因为在个体决策的过程中，Bagging使用的是“确定型”决策树，在选择划分属性时要对所有节点的所有属性进行考察，而随机森林使用的“随机型”决策树则只需考察一个属性子集。</p>
<h2 id="结合策略">结合策略</h2>
<p>平均法：简单平均法、加权平均法</p>
<p>投票法：绝对多数投票法、相对多数投票法、加权投票法</p>
<h2 id="references">References</h2>
<p>周志华，机器学习 <br/><a href="https://datawhalechina.github.io/pumpkin-book/#/">南瓜书PumpkinBook</a></p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Attention Is All You Need</title>
    <url>/2020/09/30/AttentionIsAllYouNeed/</url>
    <content><![CDATA[
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Knowledge List</title>
    <url>/2020/09/28/KnowledgeList/</url>
    <content><![CDATA[<p><a href="https://shuoxux.github.io/2020/09/28/MachineLearning/">机器学习</a></p>
]]></content>
      <categories>
        <category>KnowledgeList</category>
      </categories>
      <tags>
        <tag>KnowledgeList</tag>
      </tags>
  </entry>
  <entry>
    <title>Latex Math</title>
    <url>/2020/10/04/LatexMath/</url>
    <content><![CDATA[<h2 id="introduction">Introduction</h2>
<p>This article shows how to use latex to write math functions.</p>
<h2 id="references">References</h2>
<p><a href="https://www.latex-project.org/">latex-project.org</a></p>
<p><a href="https://www.latex-project.org/help/documentation/amsldoc.pdf">User’s Guide for the amsmath Package (Version 2.1)</a></p>
<p><a href="https://www.caam.rice.edu/~heinken/latex/symbols.pdf">LATEX Mathematical Symbols</a></p>
<p><a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics">LaTeX/Mathematics</a></p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Latex</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning</title>
    <url>/2020/09/28/MachineLearning/</url>
    <content><![CDATA[<h1 id="机器学习">机器学习</h1>
<p>机器学习分为监督学习，无监督学习，强化学习，半监督学习与主动学习。 无监督——聚类。 监督——分类、回归、标注。 统计学习三要素: 方法=模型+策略+算法</p>
<h2 id="监督学习">监督学习</h2>
<h3 id="感知机">感知机</h3>
<h3 id="k近邻">K近邻</h3>
<h3 id="朴素贝叶斯">朴素贝叶斯</h3>
<h3 id="决策树">决策树</h3>
<h3 id="逻辑斯蒂回归与最大熵">逻辑斯蒂回归与最大熵</h3>
<h3 id="支持向量机核函数">支持向量机(核函数)</h3>
<h3 id="提升方法">提升方法</h3>
<h3 id="em算法">EM算法</h3>
<h3 id="隐马尔可夫模型">隐马尔可夫模型</h3>
<h3 id="条件随机场">条件随机场</h3>
<h2 id="无监督学习">无监督学习</h2>
<p>聚类,降维,概率模型估计,话题分析,图分析</p>
<h3 id="聚类">聚类</h3>
<p>相似度,距离(闵氏距离,马氏距离,相关系数,夹角余弦) 类簇(类和类之间的距离) 层次聚类,K均值聚类 奇异值分解(紧奇异值分解,截断奇异值分解)</p>
<h3 id="主成分分析">主成分分析</h3>
<p>总体,样本主成分分析</p>
<h3 id="潜在语义分析lsa">潜在语义分析(LSA)</h3>
<h3 id="马尔可夫链蒙特卡洛法">马尔可夫链蒙特卡洛法</h3>
<p>Metropolis-Hastings算法</p>
<h3 id="潜在迪利克雷分配">潜在迪利克雷分配</h3>
<h3 id="packrank算法">PackRank算法</h3>
<h1 id="引用">引用</h1>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法</title>
    <url>/2020/09/28/Markdown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>这篇文章主要是<a href="https://www.runoob.com/markdown/">runoob.com</a> Markdown语法笔记,待完善。</p>
<h2 id="标题">标题</h2>
<p>使用#来表示标题。</p>
<pre><code># 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题</code></pre>
<blockquote>
<h1 id="一级标题">一级标题</h1>
<h2 id="二级标题">二级标题</h2>
<h3 id="三级标题">三级标题</h3>
<h4 id="四级标题">四级标题</h4>
<h5 id="五级标题">五级标题</h5>
<h6 id="六级标题">六级标题</h6>
</blockquote>
<h2 id="段落">段落</h2>
<p>使用空行换段。</p>
<pre><code>这样  

换段</code></pre>
<blockquote>
<p>这样</p>
<p>换段</p>
</blockquote>
<h2 id="字体">字体</h2>
<p>按照以下方式改变字体。</p>
<pre><code>*斜体文本*
_斜体文本_
**粗体文本**
__粗体文本__
***粗斜体文本***
___粗斜体文本___</code></pre>
<blockquote>
<p><em>斜体文本</em> <em>斜体文本</em> <strong>粗体文本</strong> <strong>粗体文本</strong> <strong><em>粗斜体文本</em></strong> <strong><em>粗斜体文本</em></strong></p>
</blockquote>
<h2 id="分隔线">分隔线</h2>
<pre><code>***

* * *

*****

- - -

----------</code></pre>
<blockquote>
<p><em>斜体文本</em> <em>斜体文本</em> <strong>粗体文本</strong> <strong>粗体文本</strong> <strong><em>粗斜体文本</em></strong> <strong><em>粗斜体文本</em></strong></p>
</blockquote>
<h2 id="删除线">删除线</h2>
<p>删除线使用&quot;~~~~&quot;表示</p>
<blockquote>
<p><del>这是删除线</del></p>
</blockquote>
<h2 id="下划线">下划线</h2>
<pre><code>&lt;u&gt;这是下划线文本&lt;/u&gt;</code></pre>
<blockquote>
<p><u></p>
</blockquote>
<h2 id="脚注">脚注</h2>
<pre><code>创建脚注格式类似这样 [^1]。</code></pre>
<h2 id="列表">列表</h2>
<pre><code>* 第一项
* 第二项
* 第三项

+ 第一项
+ 第二项
+ 第三项


- 第一项
- 第二项
- 第三项

1. 第一项
    - a
    - b
2. 第二项
    - c
    - d</code></pre>
<blockquote>
<ul>
<li>第一项</li>
<li>第二项</li>
<li><p>第三项</p></li>
<li>第一项</li>
<li>第二项</li>
<li><p>第三项</p></li>
<li>第一项</li>
<li>第二项</li>
<li><p>第三项</p></li>
</ul>
<ol type="1">
<li>第一项
<ul>
<li>a</li>
<li>b</li>
</ul></li>
<li>第二项
<ul>
<li>c</li>
<li>d</li>
</ul></li>
</ol>
</blockquote>
<h2 id="区块引用">区块引用</h2>
<pre><code>&gt; 这是
&gt; 区块
&gt; 引用

&gt; 这是
&gt;&gt; 区块
&gt;&gt;&gt; 引用

&gt; 区块中使用列表
&gt; 1. 第一项
&gt; 2. 第二项
&gt; + 第一项
&gt; + 第二项
&gt; + 第三项

* 第一项
    &gt; 这是
    &gt; 区块
* 第二项</code></pre>
<blockquote>
<p>这是 区块 引用</p>
</blockquote>
<blockquote>
<p>这是 &gt; 区块 &gt;&gt; 引用</p>
</blockquote>
<blockquote>
<p>区块中使用列表 1. 第一项 2. 第二项 + 第一项 + 第二项 + 第三项</p>
</blockquote>
<blockquote>
<ul>
<li>第一项</li>
</ul>
</blockquote>
<pre><code>&gt; 这是
&gt; 区块</code></pre>
<blockquote>
<ul>
<li>第二项</li>
</ul>
</blockquote>
<h2 id="代码">代码</h2>
<p>使用`<code>包围。</code>print()` 函数</p>
<p><code>pip install tensorflow</code></p>
<p><code>print(&quot;hello&quot;)</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;hello&quot;</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="链接">链接</h2>
<pre><code>这是一个链接[链接到参考文件](https://www.runoob.com/markdown/)</code></pre>
<p>这是一个链接<a href="https://www.runoob.com/markdown/">链接到参考文件</a> <a href="https://www.google.com">google</a> <a href="https://www.baidu.com">baidu</a></p>
<h2 id="图标">图标</h2>
<pre><code>![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png)

![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png &quot;RUNOOB&quot;)</code></pre>
<figure>
<img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" /><figcaption>RUNOOB 图标</figcaption>
</figure>
<figure>
<img src="http://static.runoob.com/images/runoob-logo.png" title="RUNOOB" alt="RUNOOB 图标" /><figcaption>RUNOOB 图标</figcaption>
</figure>
<p>这个链接用 1 作为网址变量 <a href="http://static.runoob.com/images/runoob-logo.png">RUNOOB</a>. 然后在文档的结尾为变量赋值（网址）。</p>
<p><img src="http://static.runoob.com/images/runoob-logo.png" width="20%"></p>
<h2 id="本地图片">本地图片</h2>
<figure>
<img src="./Markdown语法/test.jpg" alt="图片" /><figcaption>图片</figcaption>
</figure>
<h2 id="表格">表格</h2>
<pre><code>|  表头   | 表头  |
|  ----  | ----  |
| 单元格  | 单元格 |
| 单元格  | 单元格 |


| 左对齐 | 右对齐 | 居中对齐 |
| :-----| ----: | :----: |
| 单元格 | 单元格 | 单元格 |
| 单元格 | 单元格 | 单元格 |</code></pre>
<table>
<thead>
<tr class="header">
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>单元格</td>
<td>单元格</td>
</tr>
<tr class="even">
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">左对齐</th>
<th style="text-align: right;">右对齐</th>
<th style="text-align: center;">居中对齐</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">单元格</td>
<td style="text-align: right;">单元格</td>
<td style="text-align: center;">单元格</td>
</tr>
<tr class="even">
<td style="text-align: left;">单元格</td>
<td style="text-align: right;">单元格</td>
<td style="text-align: center;">单元格</td>
</tr>
</tbody>
</table>
<h2 id="keyboard">keyboard</h2>
<pre><code>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑。</code></pre>
<blockquote>
<p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑。</p>
</blockquote>
<p><strong>文本加粗</strong></p>
<p>** 正常显示星号 **</p>
<h2 id="数学公式">数学公式</h2>
<pre><code>$$
\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 =  \begin&#123;vmatrix&#125; 
\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\
\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\
\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\
\end&#123;vmatrix&#125;
$&#123;$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;
$$</code></pre>
<p><span class="math display">\[
\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} 
\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\
\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\
\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\
\end{vmatrix}
${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}
\]</span> ## 流程图</p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt;|a&#x3D;2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br></pre></td></tr></table></figure></code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt;|a&#x3D;2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure></code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure></code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure></code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure></code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>语法示例</span></figcaption><table><tr><td class="code"><pre><span class="line">    gantt</span><br><span class="line">    dateFormat  YYYY-MM-DD</span><br><span class="line">    title 软件开发甘特图</span><br><span class="line">    section 设计</span><br><span class="line">    需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">    原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">    UI设计                     :         des3, after des2, 5d</span><br><span class="line">未来任务                     :         des4, after des3, 5d</span><br><span class="line">    section 开发</span><br><span class="line">    学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">    设计框架                             :crit, done, after des2, 2d</span><br><span class="line">    开发                                 :crit, active, 3d</span><br><span class="line">    未来任务                              :crit, 5d</span><br><span class="line">    耍                                   :2d</span><br><span class="line">    section 测试</span><br><span class="line">    功能测试                              :active, a1, after des3, 3d</span><br><span class="line">    压力测试                               :after a1  , 20h</span><br><span class="line">    测试报告                               : 48h</span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight plain"><figcaption><span>语法示例</span></figcaption><table><tr><td class="code"><pre><span class="line">    gantt</span><br><span class="line">    dateFormat  YYYY-MM-DD</span><br><span class="line">    title 软件开发甘特图</span><br><span class="line">    section 设计</span><br><span class="line">    需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">    原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">    UI设计                     :         des3, after des2, 5d</span><br><span class="line">未来任务                     :         des4, after des3, 5d</span><br><span class="line">    section 开发</span><br><span class="line">    学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">    设计框架                             :crit, done, after des2, 2d</span><br><span class="line">    开发                                 :crit, active, 3d</span><br><span class="line">    未来任务                              :crit, 5d</span><br><span class="line">    耍                                   :2d</span><br><span class="line">    section 测试</span><br><span class="line">    功能测试                              :active, a1, after des3, 3d</span><br><span class="line">    压力测试                               :after a1  , 20h</span><br><span class="line">    测试报告                               : 48h</span><br></pre></td></tr></table></figure></code></pre>
<p>参考 <a href="https://www.runoob.com/markdown/">markdown</a></p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Write Papers with Markdown</title>
    <url>/2020/06/22/how-to-write-papers-with-markdown/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p> 下面是使用markdown来写论文的一些方法，还不完善等待补充。</p>
<h2 id="references">References</h2>
<p><a href="https://www.jianshu.com/p/b0ac7ae98100">如何用Markdown写论文？</a></p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Papers</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Set a Personal Blog with Hexo</title>
    <url>/2020/06/22/how-to-set-a-personal-blog-with-hexo-md/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p> 我主要参考下面的内容依据hexo来搭建githubpages，并且用next主题优化。</p>
<h2 id="references">References</h2>
<p><a href="https://blog.csdn.net/weixin_39345384/article/details/80095883">Windows下通过GitHub+Hexo搭建个人博客的步骤</a> <a href="https://blog.csdn.net/weixin_39345384/article/details/80785373">Hexo框架下用NexT(v7.0+)主题美化博客</a> <a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程</a> <a href="https://www.jianshu.com/p/191d1e21f7ed">Markdown基本语法</a> <a href="https://www.runoob.com/w3cnote/git-guide.html">Github 简明教程</a> <a href="https://www.runoob.com/git/git-tutorial.html">Git 教程</a> <a href="https://www.jianshu.com/p/296d22275cdd">Git和GitHub使用教程</a></p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Use Mendeley</title>
    <url>/2020/06/22/how-to-use-mendeley/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p> 下面是使用mendeley来写论文的一些方法。</p>
<h2 id="references">References</h2>
<p><a href="https://wenku.baidu.com/view/f361cdbafd0a79563c1e72a6.html">Mendeley中文入门教程</a> <a href="https://github.com/Vopaaz/CNKI_2_BibTeX">CNKI_2_BibTeX</a></p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Papers</tag>
        <tag>Mendeley</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2020/09/29/test/</url>
    <content><![CDATA[<p>This is a test. This is a test.<br />
This is a test.</p>
<p>This is a test. <br/>This is a test.<br/>This is a test.<br/>This is a test.</p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习 第六章 支持向量机(Support Vector Machine, SVM)</title>
    <url>/2020/10/05/SVM/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>  本篇是周志华西瓜书机器学习笔记，第六章支持向量机。</p>
<h2 id="间隔与支持向量">间隔与支持向量</h2>
<p>  距离超平面最近的几个训练样本点使得式(6.3)(原书)等号成立，被称为“支持向量”(support vector)，两个异类支持向量到超平面的距离之和被称为间隔。</p>
<h2 id="对偶问题">对偶问题</h2>
<p>通过拉个朗日乘子法求得支持向量机基本型的对偶问题(dual problem).</p>
<h2 id="核函数">核函数</h2>
<p>  原始样本空间可能不存在一个能正确划分两类样本的超平面，可将样本从原始空间映射到一个更高维的特征空间，使得样本在这个特征空间内线性可分。如果原始空间是有限维的，即属性数有限，那么一定存在一个高维特征空间使样本可分。</p>
<p>  令<span class="math inline">\(\phi(\boldsymbol{x})\)</span>表示将<span class="math inline">\(\boldsymbol{x}\)</span>映射后的特征向量，则在特征空间中划分超平面所对应的模型可表示为 <span class="math display">\[f(\boldsymbol{x})=\boldsymbol{w}^T\phi(\boldsymbol{x})+b\]</span> <br/>  核函数是用来简化计算高维特征中内积的一种方法。“核函数选择”成为支持向量机的最大变数。 <br/>  常用的核函数有：线性核、多项式核、高斯核、拉普拉斯核、Sigmoid核。此外还可以通过函数组合得到核函数。</p>
<h2 id="软间隔与正则化">软间隔与正则化</h2>
<p><br/>  软间隔允许某些样本不满足约束，是缓解支持向量机过拟合的主要手段。常用的替代损失函数：hinge损失、指数损失(exponential loss)、对率损失(logistic loss)。</p>
<h2 id="支持向量回归">支持向量回归</h2>
<p><br/>  支持向量回归容忍<span class="math inline">\(f(\boldsymbol{x})\)</span>与<span class="math inline">\(y\)</span>之间最多有<span class="math inline">\(\epsilon\)</span>的偏差，即仅当<span class="math inline">\(f(\boldsymbol{x})\)</span>与<span class="math inline">\(y\)</span>之间的差别绝对值大于<span class="math inline">\(\epsilon\)</span>时才计算损失。</p>
<h2 id="核方法">核方法</h2>
<p><br/>  表示定理</p>
<h2 id="references">References</h2>
<p>周志华，机器学习 <br/><a href="https://datawhalechina.github.io/pumpkin-book/#/">南瓜书PumpkinBook</a> <br/><a href="https://www.cnblogs.com/limitlessun/p/8505647.html#_label5">《机器学习》(周志华)西瓜书读书笔记(完结)</a></p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习 第四章 决策树(Decision Tree)</title>
    <url>/2020/10/05/DecisionTree/</url>
    <content><![CDATA[<h2 id="introduction">Introduction</h2>
<p>  本篇是周志华西瓜书机器学习笔记，第四章决策树。</p>
<h2 id="基本流程">基本流程</h2>
<p>  决策树是基于树结构来进行决策的。</p>
<blockquote>
<hr />
<p>输入：训练集<span class="math inline">\(D=\left\{(\boldsymbol{x}_1,y_1),(\boldsymbol{x}_2,y_2),...(\boldsymbol{x}_m,y_m)\right\}\)</span> <br/>   属性集<span class="math inline">\(A=\left\{a_1,a_2,...,a_d\right\}\)</span> <br/>过程：函数<span class="math inline">\(TreeGenerate(D,A)\)</span> <br/>1:生成节点node; <br/>2:<span class="math inline">\(\boldsymbol{if}D\)</span>样本全属于同一类别<span class="math inline">\(C\)</span> <span class="math inline">\(\boldsymbol{then}\)</span> <br/>3:  将node标记为<span class="math inline">\(C\)</span>类叶节点；<span class="math inline">\(\boldsymbol{return}\)</span> <br/>4:<span class="math inline">\(\boldsymbol{end\ if}\)</span> <br/>5:<span class="math inline">\(\boldsymbol{if}\)</span> <span class="math inline">\(A=\varnothing\)</span> <span class="math inline">\(\boldsymbol{OR}\)</span> <span class="math inline">\(D\)</span>中样本在<span class="math inline">\(A\)</span>上取值相同 <span class="math inline">\(\boldsymbol{then}\)</span> <br/>6:  将node表计为叶节点，其类别标记为<span class="math inline">\(D\)</span>中样本数最多的类；<span class="math inline">\(\boldsymbol{return}\)</span> <br/>7:<span class="math inline">\(\boldsymbol{end\ if}\)</span> <br/>8:从<span class="math inline">\(A\)</span>中选择最优划分属性<span class="math inline">\(a_*\)</span>; <br/>9:<span class="math inline">\(\boldsymbol{for}\ a_*\)</span>的每一个值<span class="math inline">\(a_*^v\ \boldsymbol{do}\)</span> <br/>10:  为node生成一个分支；令<span class="math inline">\(D_v\)</span>表示<span class="math inline">\(D\)</span>在<span class="math inline">\(a_*\)</span>上取值为<span class="math inline">\(a_*^v\)</span>的样本子集； <br/>11:  <span class="math inline">\(\boldsymbol{if}\ D_v为空\boldsymbol{then}\)</span> <br/>12:    将分支结点标记为叶结点，其类别标记为<span class="math inline">\(D\)</span>中样本最多的类；<span class="math inline">\(\boldsymbol{return}\)</span> <br/>13:  <span class="math inline">\(\boldsymbol{else}\)</span> <br/>14:    以<span class="math inline">\(TreeGenerate(D_v,A \backslash\left\{a_*\right\})\)</span>为分支结点 <br/>15:  <span class="math inline">\(\boldsymbol{end\ if}\)</span> <br/>16:<span class="math inline">\(\boldsymbol{end\ for}\)</span> <br/>输出：以node为根节点的一棵决策树</p>
<hr />
</blockquote>
<p><br/><span class="math display">\[决策树学习基本算法\]</span></p>
<h2 id="划分选择">划分选择</h2>
<p>  信息增益:一般而言，信息增益越大，则意味着使用属性a来划分所获得的&quot;纯度提升&quot;越大。ID3决策树学习算法使用信息增益为准则来划分属性。 <br/>  增益率：信息增益准则对可取数值较多的属性有所偏好，增益率可减少这种偏好带来的不利影响。C4.5使用&quot;增益率&quot;来选择最优划分属性，增益率准则可对取值数目较少的属性有所偏好，C4.5先从候选划分属性中找出信息增益高于平均水平的属性，再从中选择增益率最高的。 <br/>  基尼系数：CART决策树使用“基尼系数”(Gini index)来选择划分属性。基尼系数反应了数据集随机抽取的两个样本不一致的概率，基尼系数越小，数据集的纯度越高。</p>
<h2 id="剪枝处理">剪枝处理</h2>
<p>  剪枝是决策树学习算法对付“过拟合”的主要手段。决策树剪枝的基本策略有“预剪枝”和“后剪枝”。 <br/>  预剪枝是指在决策树生成的过程中，对每个结点在划分前先进行估计，若当前结点的划分不能带来决策树泛化性能提升，则停止划分并将当前结点标记为叶结点；可以降低过拟合地风险，减少训练时间开销和测试时间开销；基于“贪心”，有欠拟合地风险。 <br/>  后剪枝则是先从训练集生成一棵完整的决策树，然后自底向上地对非叶结点进行考察，若将该结点对应地子树替换为叶结点能带来决策树泛化性能提升，则将该子树替换为叶结点。后剪枝决策树地欠拟合风险小，泛化性能优于剪枝决策树；训练开销比较大。</p>
<h2 id="连续与缺失值">连续与缺失值</h2>
<p>  连续属性离散化技术；采用二分法(bi-partition)对连续属性进行处理。 <br/>  缺失值处理</p>
<h2 id="多变量决策树">多变量决策树</h2>
<h2 id="references">References</h2>
<p>周志华，机器学习 <br/><a href="https://datawhalechina.github.io/pumpkin-book/#/">南瓜书PumpkinBook</a> <br/><a href="https://www.cnblogs.com/limitlessun/p/8505647.html#_label5">《机器学习》(周志华)西瓜书读书笔记(完结)</a></p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
</search>
